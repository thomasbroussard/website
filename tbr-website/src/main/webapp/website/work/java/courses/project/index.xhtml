<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
<head>
	<meta content="text/html"/>


	<!-- Basic Page Needs
  ================================================== -->
	<title>Just Java</title>
	<meta name="description" content=""/>
	<meta name="author" content=""/>

	<!-- Mobile Specific Metas
  ================================================== -->
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>

	<!-- CSS
  ================================================== -->
	<link rel="stylesheet" href="../../../../stylesheets/base.css"/>
	<link rel="stylesheet" href="../../../../stylesheets/skeleton.css"/>
	<link rel="stylesheet" href="../../../../stylesheets/layout.css"/>

	<link rel="stylesheet" type="text/css" href="../../../../stylesheets/github-rainbow.css"/>
	<!-- Scripts
	=============================================== -->


	<!--[if lt IE 9]>
	<script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->


	<!-- Favicons
	================================================== -->
	<link rel="shortcut icon" href="images/favicon.ico"/>
	<link rel="apple-touch-icon" href="images/apple-touch-icon.png"/>

	<script type="text/javascript" src="../../../../scripts/rainbow/rainbow.js"/>

</head>
<body>
<div lang="en" xmlns="http://www.w3.org/1999/xhtml">


<div class="container">
<div class="sixteen columns">
	<h1 class="remove-bottom">Project: Identity Management software</h1>
	<cite>Thomas Broussard</cite>
	<hr/>

</div>


<div class="three columns sidebar">

	<nav>
		<div class="title">
			Summary
		</div>
		<div class="content">
			<p><strong>Practical - Pt 1</strong></p>
			<ol>
				<li><a href="#hom">Introduction</a></li>
				<li><a href="#first">Identity Management</a></li>
				<li><a href="#second">Extending Identities</a></li>
				<li><a href="#pt1sum">Part 1 Summary</a></li>
			</ol>
			<p><strong>Practical - Pt 2</strong></p>
			<ol>
				<li><a href="#rm">Right management</a></li>

			</ol>
			<!--<p><strong>Practical - Pt 2</strong></p>
			<ul>
				<li><strong><a href="#dp">4 - Design patterns</a></strong></li>
				<li><strong><a href="#gw">5 - Going web</a></strong></li>
				<li><strong><a href="#icp">6 - Improve the code performances</a></strong></li>
				<li><strong><a href="#idp">7 - Integrating Design Patterns</a></strong></li>
				<li><strong><a href="#ish">(Optional) - Integrating Spring and Hibernate</a></strong></li>
			</ul>               -->
		</div>
	</nav>
</div>
<div class="thirteen columns offset-by-three content">
<div class="breadcrumbs">
	<a href="../../../../index.xhtml">Home</a> > <a href="../../../../work/index.xhtml">Work</a> > <a
		href="../../../../work/java/index.xhtml">Java</a> > <a href="../../../../work/java/courses/index.xhtml">Courses</a>
	> <strong>project</strong>
</div>

<ul>
<li>
<h4 id="hom">Practical - Pt1</h4>

<h5 id="int">Introduction</h5>

<p>The goal of this project is to make you discover how to program in Java.</p>

<p>This project has a good covering in the nowadays Java language usage, you will learn basic
	things, like creating
	and using the Java Developer Kit APIs, but also to persist data in databases, or executing an
	application on a
	Java application Server.</p>

<p>The subject of Identity Management has been chosen because it will put trainees in the Business
	application
	world, which is what they will probably do in the next years</p>

<h6>The Identity Management software</h6>

<p> This Identity Management software is quite basic. The main goal is to manage users of an
	Information System.
	As many basic concept, it can be much improved, especially when you want to bring security to
	this management.
	The application will be able to :
</p>
<ul class="circle">
	<li>Access, create and modify user information</li>
	<li>Restrict accesses to user actions on managed identities depending on its right in the
		System
	</li>
	<li>Propose a simple but efficient user interface (optional)</li>
	<li>Persist users data in a database (or in an XML File)</li>
	<li>Be robust, capable of good performance</li>
</ul>

<h5 id="first">First Step: manage Identities</h5>

<h6>Identity information management</h6>

<p>First of all, let's focus on the Identity Management. This feature should include </p>
<ul class="circle">
	<li>Means to read and store information about identities. This feature can be achieved in
		several ways (these means are listed from the simplest to the hardest).
		<ul class="square">
			<li>
				The minimal thing is to provide a set of API to act on identities data
			</li>
			<li>
				You also can do it through a SWT application thanks the GUI builder in Eclipse
				see : <a href="http://www.eclipse.org/windowbuilder/"> Eclipse gui builder </a>
			</li>
			<li>
				If you are used to using servlets, JSP and more generally web interface, you can do
				a little java web application.
			</li>
		</ul>

		Data can be persisted by reading/writing data in/from an xml file <strong>or</strong> a
		database using a JDBC connector.
	</li>
</ul>
<p>As an example of an identity definition, you can look at the schema hereafter:</p>

<div class="graph">
	<svg xmlns="http://www.w3.org/2000/svg"
	     xmlns:xlink="http://www.w3.org/1999/xlink" height="120pt"
	     style="width:166px;height:120px;" version="1.1"
	     viewBox="0 0 166 120" width="166pt">
		<defs>
			<filter
					height="300%" id="f1" width="300%" x="-1" y="-1">
				<feGaussianBlur result="blurOut" stdDeviation="2.0"/>
				<feColorMatrix
						in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/>
				<feOffset
						dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/>
				<feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/>
			</filter>
		</defs>
		<g>
			<rect
					fill="#FEFECE" filter="url(#f1)" height="103.3438" style="stroke: #A80036; stroke-width: 1.5;"
					width="151" x="6"
					y="8.5"/>
			<ellipse cx="58.25" cy="24.5" fill="#ADD1B2" rx="11" ry="11"
			         style="stroke: #A80036; stroke-width: 1.0;"/>
			<path
					d="M61.0156,20.375 Q61.1719,20.1563 61.3594,20.0469 Q61.5469,19.9375 61.7656,19.9375 Q62.1406,19.9375 62.375,20.1953 Q62.6094,20.4531 62.6094,21.0625 L62.6094,22.5156 Q62.6094,23.125 62.375,23.3906 Q62.1406,23.6563 61.7656,23.6563 Q61.4219,23.6563 61.2188,23.4531 Q61.0156,23.2656 60.9063,22.75 Q60.8594,22.3906 60.6719,22.2031 Q60.3438,21.8281 59.7344,21.6094 Q59.125,21.3906 58.5,21.3906 Q57.7344,21.3906 57.1016,21.7188 Q56.4688,22.0469 55.9766,22.7969 Q55.4844,23.5469 55.4844,24.5781 L55.4844,25.6719 Q55.4844,26.9063 56.375,27.7266 Q57.2656,28.5469 58.8594,28.5469 Q59.7969,28.5469 60.4531,28.2969 Q60.8438,28.1406 61.2656,27.7031 Q61.5313,27.4375 61.6797,27.3594 Q61.8281,27.2813 62.0313,27.2813 Q62.3594,27.2813 62.6172,27.5391 Q62.875,27.7969 62.875,28.1406 Q62.875,28.4844 62.5313,28.8906 Q62.0313,29.4688 61.2344,29.7969 Q60.1563,30.25 58.8594,30.25 Q57.3438,30.25 56.1406,29.625 Q55.1563,29.125 54.4688,28.0547 Q53.7813,26.9844 53.7813,25.7031 L53.7813,24.5469 Q53.7813,23.2188 54.3984,22.0703 Q55.0156,20.9219 56.1094,20.3047 Q57.2031,19.6875 58.4375,19.6875 Q59.1719,19.6875 59.8203,19.8516 Q60.4688,20.0156 61.0156,20.375 Z "/>
			<text
					fill="#000000" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="78.75"
					y="28.9531">Identity
			</text>
			<line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="156" y1="40.5"
			      y2="40.5"/>
			<text fill="#000000" font-size="11" lengthAdjust="spacingAndGlyphs"
			      textLength="92" x="12" y="55.5">String displayName
			</text>
			<text
					fill="#000000" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="12"
					y="69.3359">String uid
			</text>
			<text fill="#000000" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55"
			      x="12" y="83.1719">String email
			</text>
			<text fill="#000000" font-size="11"
			      lengthAdjust="spacingAndGlyphs"
			      textLength="139" x="12"
			      y="97.0078">Map&lt;String,String&gt; attributes
			</text>
			<line
					style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="156" y1="103.8438" y2="103.8438"/>
		</g>
	</svg>
</div>


<h6>Authentication management</h6>

<p>You should differentiate Identities (what is managed) and Users (who does manage). Users can
	access to the application thanks to a login and a password. As users are also identities, try to
	optimize your code to avoid code replication</p>

<p>This must be done with regards to the regular security constraints concerning this kind of
	feature</p>

<h6>First application usage</h6>

<p>Your application should comport a scenario which <strong>authenticates</strong> a user, and makes
	him use the
	Identity management through predefined methods</p>
<ul class="circle">
	<li>
		<strong>Create</strong> an Identity
	</li>
	<li>
		<strong>Update</strong> an Identity
	</li>
	<li>
		<strong>Delete</strong> an Identity

	</li>
</ul>

<p>Once accomplished, this step should have you made use the very basics of the Java language</p>

<h5 id="second">Second step: Extending the Identities</h5>

<p>Our Identities are rather poor. Indeed, to be closer to a real use, we should add a possibility
	to extend the Identity definition</p>

<p>You should add to the identity fields a data structure allowing to store attributes and their
	values dynamically </p>

<p>In addition to that, you will construct an address definition according to <a
		href="http://www.upu.int/en/resources/postcodes/about-postcodes.html">this
	spec</a>, and add it to the Identity fields. As an Identity can have several addresses, choose
	the appropriated data structure to hold these addresses
</p>


<h5 id="pt1sum">
	Content summary of the part 1
</h5>

<p>To give you more indications about what you have to do to achieve this practical assignment, here
	is a summary, including the evaluation percentage of each item</p>


<table class="zebra">
	<thead>
	<tr>
		<th>Goal</th>
		<th>Technical content</th>
		<th>Evaluation (total = 100)</th>
	</tr>
	</thead>
	<tbody>
	<tr>
		<th colspan="3" class="center">First level : defining a Java Object and use it in an application</th>
	</tr>
	<tr>
		<td>This is what we should have seen during the first courses: the
			goal is to initiate you to
			the Java ecosystem: manipulate basics of the language as much as discovering java tools such
			as
			Eclipse
		</td>
		<td>To achieve this point you should have:
			<ul class="circle">
				<li>A Java project in Eclipse, containing what will be your core treatments (you could say
					your application logic)
				</li>
				<li><p>In this Java project, you have to define your own package (remember the good practice)
					to write your first Java Object: it has to be the Identity object defined in this document,
					please re-read the specification to find how to implement the Identity.</p>

					<p> You also should be able to run some tests on this object :</p>
					<ul>
						<li>Instantiate an Identity</li>
						<li>Store information in it</li>
						<li>Test its method</li>
					</ul>
				</li>
			</ul>
		</td>
		<td>15</td>
	</tr>
	<tr>
		<th colspan="3" class="center">Second level : Find a way to persist a POJO</th>
	</tr>
	<tr>
		<td>This is the most common problem in computer science, for achieving this part fully, you must be
			able to store a list of Identity in an <strong>XML file</strong> or in a <strong>Data Base</strong>
		</td>
		<td>To achieve this point you should have:
			<ul class="circle">
				<li>The previous point totally achieved
				</li>
				<li>
					If you chose the database connection, you should be able to connect to the database through a JDBC
					connection, manipulate the
					PreparedStatement and the Connection object, to read and record from / to the database
				</li>
				<li>
					If you chose the XML File persistence, you should use at least the DOM API to parse your XML file
					and read/write from/to the xml file.
				</li>
			</ul>
		</td>
		<td>40</td>
	</tr>
	<tr>
		<th colspan="3" class="center">Level three: Be professional</th>
	</tr>
	<tr>
		<td><p>This point will stand for all the Quality and Documentation in the project, all your classes should
			contain appropriate javadoc and comments (a tool evaluating your code quality will be used)</p>

			<p>You also must provide a technical description of your architecture, this documentation should be in a
				standard format : odt, pdf, doc, docbook, dita, epub. This document is called <strong>Technical
					Specification</strong></p>

			<p>You should provide a user guide on how to use the "public" part of your program. The public part of your
				program can either be a GUI or a set of APIs depending if you achieved to make a working GUI. This
				document is called the <strong>User guide</strong>. This user guide should be readable by someone who
				doesn't know about your program internal architecture.</p>


		</td>
		<td>To achieve this point you should have:
			<ul class="circle">
				<li>A document indicating what your program is doing and how it is wired inside (what kind of APIs). Do
					not hesitate to provide schemas in this documentation, this is the Technical Specification document

				</li>
				<li>A document indicating how your program should be used, this is the User Guide
				</li>
				<li>You must export your javadoc in a jar called <code>javadoc.jar</code>, and put it in your project in
					a folder named "javadoc"
				</li>
				<li>
					The preceding requirement implies that you comment well your code, and especially the javadoc.
				</li>
			</ul>
		</td>
		<td>35</td>
	</tr>
	<tr>
		<td></td>
		<td></td>
		<td><strong>total: 100</strong></td>
	</tr>
	<tr>
		<th colspan="3" class="center">Bonus points</th>
	</tr>
	<tr>
		<td><strong>Make everything configurable:</strong>
			This configuration will avoid hardcoded parameter like connection strings or file path. This is always bad
			in any application
		</td>
		<td>To achieve this point you should have:
			<ul class="circle">
				<li>A global configuration class, which can read a configuration property set from a file on the
					filesystem (so the path to this file is hardcoded or given as an application parameter)
				</li>
				<li>
					Your configuration must be based on a standard format like <code>properties</code> or
					<code>XML</code>
				</li>
				<li>
					Try to list everything variable in your application and parameter it inside your configuration file
				</li>
			</ul>
		</td>
		<td>10</td>
	</tr>
	<tr>
		<td>Do a GUI allowing to use your Identity APIs as well as your serializers/deserializers.
		</td>
		<td>To achieve this point you should have:
			<ul class="circle">
				<li>A GUI that can run as a desktop application, or a web server (prefer the web server)
				</li>
				<li>
					This point should be made <strong>after</strong> you did the other elements listed above.
					I will not take it in account for the evaluation if you have not already made what is really required before.
				</li>
			</ul>
		</td>
		<td>20</td>
	</tr>
	</tbody>
</table>
</li>
</ul>

<h4>Practical - Pt2 </h4>
<h5 id="rm">Third step: Managing users rights</h5>


<p>In an IAM application, access to Identity data is submitted to the rights assigned to the
	User</p>

<div class="graph">
	<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" height="270pt"
	     style="width:218px;height:270px;" version="1.1" viewBox="0 0 218 270" width="218pt">
		<defs>
			<filter height="300%" id="f1" width="300%" x="-1" y="-1">
				<feGaussianBlur result="blurOut" stdDeviation="2.0"/>
				<feColorMatrix in="blurOut" result="blurOut2" type="matrix"
				               values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/>
				<feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/>
				<feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/>
			</filter>
		</defs>
		<g>
			<ellipse cx="106.8198" cy="23.9517" fill="#FEFECE" filter="url(#f1)" rx="34.8198" ry="15.4517"
			         style="stroke: #A80036; stroke-width: 1.5;"/>
			<text fill="#000000" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="45" x="84.3198" y="29.2564">
				Identity
			</text>
			<ellipse cx="107.3688" cy="115.9517" fill="#FEFECE" filter="url(#f1)" rx="54.6188" ry="15.4517"
			         style="stroke: #A80036; stroke-width: 1.5;"/>
			<text fill="#000000" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="73" x="70.8688"
			      y="121.2564">Assignment
			</text>
			<ellipse cx="106.7904" cy="207.9517" fill="#FEFECE" filter="url(#f1)" rx="51.7904" ry="15.4517"
			         style="stroke: #A80036; stroke-width: 1.5;"/>
			<text fill="#000000" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="69" x="72.2904"
			      y="213.2564">Permission
			</text>
			<path d="M107,39.862 C107,54.933 107,78.353 107,95.037 " fill="none"
			      style="stroke: #A80036; stroke-width: 1.0;"/>
			<path d="M107,131.8617 C107,146.9333 107,170.3527 107,187.0368 " fill="none"
			      style="stroke: #A80036; stroke-width: 1.0;"/>
			<polygon fill="#DDDDDD" points="8,242,8,269.6094,217,269.6094,217,242,8,242"
			         style="stroke: #000000; stroke-width: 1.0;"/>
			<text fill="#000000" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="197" x="14" y="261">Subject
				Permission Assignment
			</text>
		</g>
	</svg>

	<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" height="419pt"
	     style="width:652px;height:419px;" version="1.1" viewBox="0 0 652 419" width="652pt">
		<defs>
			<filter height="300%" id="f1" width="300%" x="-1" y="-1">
				<feGaussianBlur result="blurOut" stdDeviation="2.0"/>
				<feColorMatrix in="blurOut" result="blurOut2" type="matrix"
				               values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/>
				<feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/>
				<feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/>
			</filter>
		</defs>
		<g>
			<rect fill="#FFFFFF" filter="url(#f1)" height="193" style="stroke: #000000; stroke-width: 2.0;" width="176"
			      x="30" y="156"/>
			<text fill="#000000" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="32"
			      x="102" y="172">Role
			</text>
			<ellipse cx="158.2561" cy="216.9517" fill="#FEFECE" filter="url(#f1)" rx="23.5061" ry="15.4517"
			         style="stroke: #A80036; stroke-width: 1.5;"/>
			<text fill="#000000" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="29" x="143.7561"
			      y="222.2564">Role
			</text>
			<ellipse cx="122.3185" cy="308.9517" fill="#FEFECE" filter="url(#f1)" rx="59.5685" ry="15.4517"
			         style="stroke: #A80036; stroke-width: 1.5;"/>
			<text fill="#000000" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="80" x="82.3185"
			      y="314.2564">Organization
			</text>
			<ellipse cx="157.8198" cy="23.9517" fill="#FEFECE" filter="url(#f1)" rx="34.8198" ry="15.4517"
			         style="stroke: #A80036; stroke-width: 1.5;"/>
			<text fill="#000000" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="45" x="135.3198"
			      y="29.2564">Identity
			</text>
			<ellipse cx="158.3688" cy="115.9517" fill="#FEFECE" filter="url(#f1)" rx="54.6188" ry="15.4517"
			         style="stroke: #A80036; stroke-width: 1.5;"/>
			<text fill="#000000" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="73" x="121.8688"
			      y="121.2564">Assignment
			</text>
			<ellipse cx="288.1972" cy="308.9517" fill="#FEFECE" filter="url(#f1)" rx="57.4472" ry="15.4517"
			         style="stroke: #A80036; stroke-width: 1.5;"/>
			<text fill="#000000" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="77" x="249.6972"
			      y="314.2564">Permission1
			</text>
			<ellipse cx="438.1972" cy="308.9517" fill="#FEFECE" filter="url(#f1)" rx="57.4472" ry="15.4517"
			         style="stroke: #A80036; stroke-width: 1.5;"/>
			<text fill="#000000" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="77" x="399.6972"
			      y="314.2564">Permission2
			</text>
			<ellipse cx="588.1972" cy="308.9517" fill="#FEFECE" filter="url(#f1)" rx="57.4472" ry="15.4517"
			         style="stroke: #A80036; stroke-width: 1.5;"/>
			<text fill="#000000" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="77" x="549.6972"
			      y="314.2564">Permission3
			</text>
			<path d="M158,39.862 C158,54.933 158,78.353 158,95.037 " fill="none"
			      style="stroke: #A80036; stroke-width: 1.0;"/>
			<path d="M158,131.608 C158,148.717 158,177.141 158,196.217 " fill="none"
			      style="stroke: #A80036; stroke-width: 1.0;"/>
			<path d="M173.423,228.678 C195.803,244.171 237.488,273.0299 263.932,291.3375 " fill="none"
			      style="stroke: #A80036; stroke-width: 1.0;"/>
			<path d="M178.589,224.618 C224.777,239.464 337.337,275.6441 397.885,295.1059 " fill="none"
			      style="stroke: #A80036; stroke-width: 1.0;"/>
			<path d="M179.915,222.587 C246.262,236.474 446.095,278.2989 539.233,297.793 " fill="none"
			      style="stroke: #A80036; stroke-width: 1.0;"/>
			<path d="M152.375,232.062 C146.318,247.206 136.636,271.41 129.835,288.4124 " fill="none"
			      style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/>
			<polygon fill="#DDDDDD" points="204,391,204,418.6094,458,418.6094,458,391,204,391"
			         style="stroke: #000000; stroke-width: 1.0;"/>
			<text fill="#000000" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="242" x="210" y="410">Subject
				Role-Organization Assignment
			</text>
		</g>
	</svg>
</div>

</div>

</div>

</div>
</body>

</html>